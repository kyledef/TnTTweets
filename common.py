import tweepy
from tweepy.streaming import StreamListener
from credentials import *

def getAuthentication():
	try:
		auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
		auth.set_access_token(access_token, access_token_secret)
		return auth
	except:
		return None

def process_errors(errors):
	print "Error Occurred"
	print errors


# Extend the built in StreamListener class to determine how we handle the events generated by the streaming api
# The events overloaded can be found in the source code at: https://github.com/tweepy/tweepy/blob/v2.3.0/tweepy/streaming.py
class MyBasicListener(StreamListener):

	def on_error(self, status_code):
		process_errors(repr(status_code))
		return True #Returning False will stop stream and close connection

	def on_data(self, data): # Note overloading this message will affect how the on_event methods work
		print data
		return True